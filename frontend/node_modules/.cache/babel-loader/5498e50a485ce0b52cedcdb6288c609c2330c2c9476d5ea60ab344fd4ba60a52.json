{"ast":null,"code":"var _jsxFileName = \"/Users/adityabhushan/Desktop/ERNET Chat Bot/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Box, TextField, Button, Paper, Typography, List, ListItem, ListItemText, CircularProgress } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport axios from 'axios';\nimport './index.css';\n// Import new components (to be created)\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport SupportInfo from './components/SupportInfo';\nimport ChatbotWidget from './components/ChatbotWidget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSend = async () => {\n    if (!message.trim()) return;\n    const userMessage = message;\n    setMessage('');\n    setLoading(true);\n\n    // Add user message to conversation\n    setConversation(prev => [...prev, {\n      role: 'user',\n      content: userMessage\n    }]);\n    try {\n      const response = await axios.post('http://localhost:8000/api/v1/chat', {\n        message: userMessage,\n        conversation_history: conversation\n      });\n\n      // Add assistant response to conversation\n      setConversation(response.data.conversation_history);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Add error message to conversation\n      setConversation(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, there was an error processing your request.'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ernet-app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"ernet-main\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SupportInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatbotWidget, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tateyFmHbATiq0/i73Va6q72nfc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Box","TextField","Button","Paper","Typography","List","ListItem","ListItemText","CircularProgress","SendIcon","axios","Header","SearchBar","SupportInfo","ChatbotWidget","jsxDEV","_jsxDEV","App","_s","message","setMessage","conversation","setConversation","loading","setLoading","handleSend","trim","userMessage","prev","role","content","response","post","conversation_history","data","error","console","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adityabhushan/Desktop/ERNET Chat Bot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Box,\n  TextField,\n  Button,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  CircularProgress,\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport axios from 'axios';\nimport './index.css';\n// Import new components (to be created)\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport SupportInfo from './components/SupportInfo';\nimport ChatbotWidget from './components/ChatbotWidget';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSend = async () => {\n    if (!message.trim()) return;\n\n    const userMessage = message;\n    setMessage('');\n    setLoading(true);\n\n    // Add user message to conversation\n    setConversation(prev => [...prev, { role: 'user', content: userMessage }]);\n\n    try {\n      const response = await axios.post('http://localhost:8000/api/v1/chat', {\n        message: userMessage,\n        conversation_history: conversation,\n      });\n\n      // Add assistant response to conversation\n      setConversation(response.data.conversation_history);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Add error message to conversation\n      setConversation(prev => [\n        ...prev,\n        { role: 'assistant', content: 'Sorry, there was an error processing your request.' },\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  return (\n    <div className=\"ernet-app\">\n      <Header />\n      <main className=\"ernet-main\">\n        <SearchBar />\n        <SupportInfo />\n      </main>\n      <ChatbotWidget />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}