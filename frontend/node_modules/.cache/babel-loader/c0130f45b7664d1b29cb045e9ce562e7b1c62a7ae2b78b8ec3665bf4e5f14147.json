{"ast":null,"code":"var _jsxFileName = \"/Users/adityabhushan/Desktop/ERNET Chat Bot/frontend/src/components/ChatbotWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatbotWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingDots = () => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"chatbot-loading-dots\",\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    children: \".\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \".\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 19\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \".\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 33\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n// Helper to deduplicate consecutive messages (role+content)\n_c = LoadingDots;\nfunction deduplicateHistory(history) {\n  if (!Array.isArray(history)) return [];\n  const deduped = [];\n  for (const msg of history) {\n    if (!deduped.length || deduped[deduped.length - 1].role !== msg.role || deduped[deduped.length - 1].content !== msg.content) {\n      deduped.push(msg);\n    }\n  }\n  return deduped;\n}\nconst ChatbotWidget = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([{\n    role: 'assistant',\n    content: 'Welcome to ERNET India! How can I help you?'\n  }]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    if (open && chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chat, open]);\n  const handleSend = async () => {\n    if (!message.trim() || loading) return;\n    setLoading(true);\n    setError('');\n    const userMsg = {\n      role: 'user',\n      content: message\n    };\n    setMessage('');\n    try {\n      const res = await fetch('/api/v1/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message,\n          conversation_history: [...chat, userMsg]\n        })\n      });\n      const data = await res.json();\n      if (data.conversation_history) {\n        setChat(deduplicateHistory(data.conversation_history));\n      } else if (data.response) {\n        setChat(c => deduplicateHistory([...c, {\n          role: 'assistant',\n          content: data.response\n        }]));\n      } else {\n        setError('Sorry, no response.');\n      }\n    } catch (e) {\n      setError('Sorry, there was an error connecting to the server.');\n    }\n    setLoading(false);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !loading) handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-widget-fixed\",\n    children: open ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-widget-box chatbot-animate-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-widget-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chatbot-title\",\n          children: \"ERNET India\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-widget-close\",\n          onClick: () => setOpen(false),\n          title: \"Close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-widget-content\",\n        children: [chat.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-msg chatbot-msg-${msg.role}`,\n          style: {\n            animationDelay: `${idx * 0.04}s`\n          },\n          children: msg.content\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-msg chatbot-msg-assistant\",\n          children: /*#__PURE__*/_jsxDEV(LoadingDots, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-msg chatbot-msg-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-widget-inputbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatbot-widget-input\",\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyDown: handleKeyDown,\n          autoFocus: open,\n          disabled: loading,\n          maxLength: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-widget-submit\",\n          onClick: handleSend,\n          disabled: !message.trim() || loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingDots, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 26\n          }, this) : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-widget-open chatbot-animate-in\",\n      onClick: () => setOpen(true),\n      title: \"Open chat\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"chat\",\n        children: \"\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotWidget, \"1FLYp9jGb54+5Fb2kVMuNSySzq8=\");\n_c2 = ChatbotWidget;\nexport default ChatbotWidget;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadingDots\");\n$RefreshReg$(_c2, \"ChatbotWidget\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","LoadingDots","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","deduplicateHistory","history","Array","isArray","deduped","msg","length","role","content","push","ChatbotWidget","_s","open","setOpen","message","setMessage","chat","setChat","loading","setLoading","error","setError","chatEndRef","current","scrollIntoView","behavior","handleSend","trim","userMsg","res","fetch","method","headers","body","JSON","stringify","conversation_history","data","json","response","c","e","handleKeyDown","key","onClick","title","map","idx","style","animationDelay","ref","type","placeholder","value","onChange","target","onKeyDown","autoFocus","disabled","maxLength","_c2","$RefreshReg$"],"sources":["/Users/adityabhushan/Desktop/ERNET Chat Bot/frontend/src/components/ChatbotWidget.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './ChatbotWidget.css';\n\nconst LoadingDots = () => (\n  <span className=\"chatbot-loading-dots\">\n    <span>.</span><span>.</span><span>.</span>\n  </span>\n);\n\n// Helper to deduplicate consecutive messages (role+content)\nfunction deduplicateHistory(history) {\n  if (!Array.isArray(history)) return [];\n  const deduped = [];\n  for (const msg of history) {\n    if (\n      !deduped.length ||\n      deduped[deduped.length - 1].role !== msg.role ||\n      deduped[deduped.length - 1].content !== msg.content\n    ) {\n      deduped.push(msg);\n    }\n  }\n  return deduped;\n}\n\nconst ChatbotWidget = () => {\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([\n    { role: 'assistant', content: 'Welcome to ERNET India! How can I help you?' }\n  ]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    if (open && chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chat, open]);\n\n  const handleSend = async () => {\n    if (!message.trim() || loading) return;\n    setLoading(true);\n    setError('');\n    const userMsg = { role: 'user', content: message };\n    setMessage('');\n    try {\n      const res = await fetch('/api/v1/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          message,\n          conversation_history: [...chat, userMsg]\n        })\n      });\n      const data = await res.json();\n      if (data.conversation_history) {\n        setChat(deduplicateHistory(data.conversation_history));\n      } else if (data.response) {\n        setChat(c => deduplicateHistory([...c, { role: 'assistant', content: data.response }]));\n      } else {\n        setError('Sorry, no response.');\n      }\n    } catch (e) {\n      setError('Sorry, there was an error connecting to the server.');\n    }\n    setLoading(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !loading) handleSend();\n  };\n\n  return (\n    <div className=\"chatbot-widget-fixed\">\n      {open ? (\n        <div className=\"chatbot-widget-box chatbot-animate-in\">\n          <div className=\"chatbot-widget-header\">\n            <span className=\"chatbot-title\">ERNET India</span>\n            <button className=\"chatbot-widget-close\" onClick={() => setOpen(false)} title=\"Close\">×</button>\n          </div>\n          <div className=\"chatbot-widget-content\">\n            {chat.map((msg, idx) => (\n              <div\n                key={idx}\n                className={`chatbot-msg chatbot-msg-${msg.role}`}\n                style={{ animationDelay: `${idx * 0.04}s` }}\n              >\n                {msg.content}\n              </div>\n            ))}\n            {loading && <div className=\"chatbot-msg chatbot-msg-assistant\"><LoadingDots /></div>}\n            {error && <div className=\"chatbot-msg chatbot-msg-error\">{error}</div>}\n            <div ref={chatEndRef} />\n          </div>\n          <div className=\"chatbot-widget-inputbar\">\n            <input\n              className=\"chatbot-widget-input\"\n              type=\"text\"\n              placeholder=\"Type your message...\"\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n              onKeyDown={handleKeyDown}\n              autoFocus={open}\n              disabled={loading}\n              maxLength={500}\n            />\n            <button\n              className=\"chatbot-widget-submit\"\n              onClick={handleSend}\n              disabled={!message.trim() || loading}\n            >\n              {loading ? <LoadingDots /> : 'Send'}\n            </button>\n          </div>\n        </div>\n      ) : (\n        <button className=\"chatbot-widget-open chatbot-animate-in\" onClick={() => setOpen(true)} title=\"Open chat\">\n          <span role=\"img\" aria-label=\"chat\">💬</span>\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default ChatbotWidget; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}