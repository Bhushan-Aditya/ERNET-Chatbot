{"ast":null,"code":"var _jsxFileName = \"/Users/adityabhushan/Desktop/ERNET Chat Bot/frontend/src/components/ChatbotWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotWidget = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([{\n    role: 'assistant',\n    content: 'Welcome to ERNET India! How can I help you?'\n  }]);\n  const [loading, setLoading] = useState(false);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    if (open && chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [chat, open]);\n  const handleSend = async () => {\n    if (!message.trim() || loading) return;\n    setLoading(true);\n    const userMsg = {\n      role: 'user',\n      content: message\n    };\n    setMessage('');\n    try {\n      const res = await fetch('/api/v1/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message,\n          conversation_history: [...chat, userMsg]\n        })\n      });\n      const data = await res.json();\n      if (data.conversation_history) {\n        setChat(data.conversation_history);\n      } else if (data.response) {\n        setChat(c => [...c, {\n          role: 'assistant',\n          content: data.response\n        }]);\n      } else {\n        setChat(c => [...c, {\n          role: 'assistant',\n          content: 'Sorry, no response.'\n        }]);\n      }\n    } catch (e) {\n      setChat(c => [...c, {\n        role: 'assistant',\n        content: 'Sorry, there was an error connecting to the server.'\n      }]);\n    }\n    setLoading(false);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !loading) handleSend();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-widget-fixed\",\n    children: open ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-widget-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-widget-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"ERNET India\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-widget-close\",\n          onClick: () => setOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-widget-content\",\n        children: [chat.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-msg chatbot-msg-${msg.role === 'user' ? 'user' : 'bot'}`,\n          children: msg.content\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-msg chatbot-msg-bot\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-widget-inputbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatbot-widget-input\",\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyDown: handleKeyDown,\n          autoFocus: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-widget-submit\",\n          onClick: handleSend,\n          disabled: !message.trim() || loading,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-widget-open\",\n      onClick: () => setOpen(true),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"chat\",\n        children: \"\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotWidget, \"AomTZINLvRxrwpNIBvqnzXwLmu8=\");\n_c = ChatbotWidget;\nexport default ChatbotWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatbotWidget\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatbotWidget","_s","open","setOpen","message","setMessage","chat","setChat","role","content","loading","setLoading","chatEndRef","current","scrollIntoView","behavior","handleSend","trim","userMsg","res","fetch","method","headers","body","JSON","stringify","conversation_history","data","json","response","c","e","handleKeyDown","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","idx","ref","type","placeholder","value","onChange","target","onKeyDown","autoFocus","disabled","_c","$RefreshReg$"],"sources":["/Users/adityabhushan/Desktop/ERNET Chat Bot/frontend/src/components/ChatbotWidget.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst ChatbotWidget = () => {\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([\n    { role: 'assistant', content: 'Welcome to ERNET India! How can I help you?' }\n  ]);\n  const [loading, setLoading] = useState(false);\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    if (open && chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chat, open]);\n\n  const handleSend = async () => {\n    if (!message.trim() || loading) return;\n    setLoading(true);\n    const userMsg = { role: 'user', content: message };\n    setMessage('');\n    try {\n      const res = await fetch('/api/v1/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          message,\n          conversation_history: [...chat, userMsg]\n        })\n      });\n      const data = await res.json();\n      if (data.conversation_history) {\n        setChat(data.conversation_history);\n      } else if (data.response) {\n        setChat(c => [...c, { role: 'assistant', content: data.response }]);\n      } else {\n        setChat(c => [...c, { role: 'assistant', content: 'Sorry, no response.' }]);\n      }\n    } catch (e) {\n      setChat(c => [...c, { role: 'assistant', content: 'Sorry, there was an error connecting to the server.' }]);\n    }\n    setLoading(false);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !loading) handleSend();\n  };\n\n  return (\n    <div className=\"chatbot-widget-fixed\">\n      {open ? (\n        <div className=\"chatbot-widget-box\">\n          <div className=\"chatbot-widget-header\">\n            <span>ERNET India</span>\n            <button className=\"chatbot-widget-close\" onClick={() => setOpen(false)}>&times;</button>\n          </div>\n          <div className=\"chatbot-widget-content\">\n            {chat.map((msg, idx) => (\n              <div key={idx} className={`chatbot-msg chatbot-msg-${msg.role === 'user' ? 'user' : 'bot'}`}>{msg.content}</div>\n            ))}\n            {loading && <div className=\"chatbot-msg chatbot-msg-bot\">...</div>}\n            <div ref={chatEndRef} />\n          </div>\n          <div className=\"chatbot-widget-inputbar\">\n            <input\n              className=\"chatbot-widget-input\"\n              type=\"text\"\n              placeholder=\"Type your message...\"\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n              onKeyDown={handleKeyDown}\n              autoFocus\n              disabled={loading}\n            />\n            <button className=\"chatbot-widget-submit\" onClick={handleSend} disabled={!message.trim() || loading}>\n              Submit\n            </button>\n          </div>\n        </div>\n      ) : (\n        <button className=\"chatbot-widget-open\" onClick={() => setOpen(true)}>\n          <span role=\"img\" aria-label=\"chat\">ðŸ’¬</span>\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default ChatbotWidget; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}